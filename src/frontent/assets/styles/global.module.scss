/*  Scroll Styling ↓ */
.addScrollStyles::-webkit-scrollbar {
  height: 8px;
  width: 8px;
}

.addScrollStyles::-webkit-scrollbar-thumb {
  background-color: var(--global-scroll-background-color);
  border-radius: 15px;
}

.addScrollStyles::-webkit-scrollbar-thumb:hover {
  background-color: var(--global-scroll-background-hover-color);
}

.addScrollStyles::-webkit-scrollbar-thumb:active {
  background-color: var(--global-scroll-background-active-color);
}

.addScrollStyles::-webkit-scrollbar-corner {
  background-color: transparent;
}

.hideScrollBar::-webkit-scrollbar {
  height: 0;
  width: 0;
}

.hideOverflow {
  overflow: hidden;
}

/*  Scroll Styling ↑ */


/*  Text-Overflowed Styling ↓ */
.applySingleOverflow {
  display: inline-block !important;
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
  word-break: keep-all !important;
  min-width: initial;
  max-width: 100%;
}

.applyMultiOverflow {
  display: -webkit-box !important;
  -webkit-line-clamp: 2 !important;
  -webkit-box-orient: vertical !important;
  overflow: hidden !important;
  word-break: break-word !important;
  min-width: initial !important;
}

/*  Text-Overflowed Styling ↑ */


/* Misc Styling ↓ */
/* make element invisible but keep it's sizes, position and remove ability to interact with it */
.hideElement {
  pointer-events: none !important;
  opacity: 0 !important;
  visibility: hidden !important;
  cursor: initial !important;
}

/* make element invisible but leave the possibility of interaction */
.maskElement {
  position: absolute !important;
  opacity: 0 !important;
}

/* make element disappear */
.deleteElement {
  display: none !important;
}

/* Misc Styling ↑ */


/* SVG fill status Styling ↓ */
.whiteFillSVG *, .whiteBothSVG * {
  fill: #fff;
}

.primaryFillSVG *, .primaryBothSVG * {
  fill: var(--palette-primary);
}

.errorFillSVG *, .errorBothSVG * {
  fill: var(--palette-error);
}

.textPrimaryFillSVG *, .textPrimaryBothSVG * {
  fill: var(--palette-text-primary) ;
}

.textSecondaryFillSVG *, .textQuaternaryBothSVG * {
  fill: var(--palette-text-secondary);
}

.textTertiaryFillSVG *, .textQuaternaryBothSVG * {
  fill: var(--palette-text-tertiary);
}

.textQuaternaryFillSVG *, .textQuaternaryBothSVG * {
  fill: var(--palette-text-quaternary);
}

/* SVG fill status Styling ↑ */


/* SVG stroke status Styling ↓ */
.whiteStrokeSVG *, .whiteBothSVG * {
  stroke: #fff ;
}

.primaryStrokeSVG *, .primaryBothSVG * {
  stroke: var(--palette-primary);
}

.errorStrokeSVG *, .errorBothSVG * {
  stroke: var(--palette-error);
}

.textPrimaryStrokeSVG *, .textPrimaryBothSVG * {
  stroke: var(--palette-text-primary) ;
}

.textSecondaryStrokeSVG *, .textQuaternaryBothSVG * {
  stroke: var(--palette-text-secondary);
}

.textTertiaryStrokeSVG *, .textQuaternaryBothSVG * {
  stroke: var(--palette-text-tertiary);
}

.textQuaternaryStrokeSVG *, .textQuaternaryBothSVG * {
  stroke: var(--palette-text-quaternary);
}

/* SVG fill status Styling ↑ */


/* Background status Styling ↓ */
.whiteBackground {
  background-color: #fff !important;
}

.primaryBackground {
  background-color: var(--palette-primary) !important;
}

.errorBackground {
  background-color: var(--palette-error) !important;
}

.textPrimaryBackground {
  background-color: var(--palette-text-primary) !important;
}

.textSecondaryBackground {
  background-color: var(--palette-text-secondary) !important;
}

.textTertiaryBackground {
  background-color: var(--palette-text-tertiary) !important;
}

.textQuaternaryBackground {
  background-color: var(--palette-text-quaternary) !important;
}

/* Background status Styling ↑ */


/* Border status Styling ↓ */
.whiteBorder {
  border-color: #fff !important;
}

.primaryBorder {
  border-color: var(--palette-primary) !important;
}

.errorBorder {
  border-color: var(--palette-error) !important;
}

.textPrimaryBorder {
  border-color: var(--palette-text-primary) !important;
}

.textSecondaryBorder {
  border-color: var(--palette-text-secondary) !important;
}

.textTertiaryBorder {
  border-color: var(--palette-text-tertiary) !important;
}

.textQuaternaryBorder {
  border-color: var(--palette-text-quaternary) !important;
}

/* Border status Styling ↑ */

/* Text status Styling ↓ */
.defaultText, .primaryText, .errorText {
  font-family: "Montserrat", sans-serif;
  font-weight: 500;
  font-size: 14px;
}

.defaultText {
  color: var(--palette-text-secondary);
}

.whiteText {
  color: #fff !important;
}

.primaryText {
  color: var(--palette-primary) !important;
}

.errorText {
  color: var(--palette-error) !important;
}

.textPrimaryText {
  color: var(--palette-text-primary) !important;
}

.textSecondaryText {
  color: var(--palette-text-secondary) !important;
}

.textTertiaryText {
  color: var(--palette-text-tertiary) !important;
}

.textQuaternaryText {
  color: var(--palette-text-quaternary) !important;
}

/* Text status Styling ↑ */
